/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the NYUUserGroup service. Represents a row in the &quot;nyyou_NYUUserGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.nyu.model.impl.NYUUserGroupModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.nyu.model.impl.NYUUserGroupImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see NYUUserGroup
 * @see com.nyu.model.impl.NYUUserGroupImpl
 * @see com.nyu.model.impl.NYUUserGroupModelImpl
 * @generated
 */
public interface NYUUserGroupModel extends BaseModel<NYUUserGroup> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a n y u user group model instance should use the {@link NYUUserGroup} interface instead.
	 */

	/**
	 * Returns the primary key of this n y u user group.
	 *
	 * @return the primary key of this n y u user group
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this n y u user group.
	 *
	 * @param primaryKey the primary key of this n y u user group
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this n y u user group.
	 *
	 * @return the uuid of this n y u user group
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this n y u user group.
	 *
	 * @param uuid the uuid of this n y u user group
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the user group ID of this n y u user group.
	 *
	 * @return the user group ID of this n y u user group
	 */
	public long getUserGroupId();

	/**
	 * Sets the user group ID of this n y u user group.
	 *
	 * @param userGroupId the user group ID of this n y u user group
	 */
	public void setUserGroupId(long userGroupId);

	/**
	 * Returns the company ID of this n y u user group.
	 *
	 * @return the company ID of this n y u user group
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this n y u user group.
	 *
	 * @param companyId the company ID of this n y u user group
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this n y u user group.
	 *
	 * @return the group ID of this n y u user group
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this n y u user group.
	 *
	 * @param groupId the group ID of this n y u user group
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the group privacy of this n y u user group.
	 *
	 * @return the group privacy of this n y u user group
	 */
	@AutoEscape
	public String getGroupPrivacy();

	/**
	 * Sets the group privacy of this n y u user group.
	 *
	 * @param groupPrivacy the group privacy of this n y u user group
	 */
	public void setGroupPrivacy(String groupPrivacy);

	/**
	 * Returns the appreciated user IDs of this n y u user group.
	 *
	 * @return the appreciated user IDs of this n y u user group
	 */
	@AutoEscape
	public String getAppreciatedUserIds();

	/**
	 * Sets the appreciated user IDs of this n y u user group.
	 *
	 * @param appreciatedUserIds the appreciated user IDs of this n y u user group
	 */
	public void setAppreciatedUserIds(String appreciatedUserIds);

	/**
	 * Returns the appreciate count of this n y u user group.
	 *
	 * @return the appreciate count of this n y u user group
	 */
	public long getAppreciateCount();

	/**
	 * Sets the appreciate count of this n y u user group.
	 *
	 * @param appreciateCount the appreciate count of this n y u user group
	 */
	public void setAppreciateCount(long appreciateCount);

	/**
	 * Returns the created date of this n y u user group.
	 *
	 * @return the created date of this n y u user group
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this n y u user group.
	 *
	 * @param createdDate the created date of this n y u user group
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the created by of this n y u user group.
	 *
	 * @return the created by of this n y u user group
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this n y u user group.
	 *
	 * @param createdBy the created by of this n y u user group
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the updated date of this n y u user group.
	 *
	 * @return the updated date of this n y u user group
	 */
	public Date getUpdatedDate();

	/**
	 * Sets the updated date of this n y u user group.
	 *
	 * @param updatedDate the updated date of this n y u user group
	 */
	public void setUpdatedDate(Date updatedDate);

	/**
	 * Returns the updated by of this n y u user group.
	 *
	 * @return the updated by of this n y u user group
	 */
	public long getUpdatedBy();

	/**
	 * Sets the updated by of this n y u user group.
	 *
	 * @param updatedBy the updated by of this n y u user group
	 */
	public void setUpdatedBy(long updatedBy);

	/**
	 * Returns the administrators of this n y u user group.
	 *
	 * @return the administrators of this n y u user group
	 */
	@AutoEscape
	public String getAdministrators();

	/**
	 * Sets the administrators of this n y u user group.
	 *
	 * @param administrators the administrators of this n y u user group
	 */
	public void setAdministrators(String administrators);

	/**
	 * Returns the about of this n y u user group.
	 *
	 * @return the about of this n y u user group
	 */
	public String getAbout();

	/**
	 * Returns the localized about of this n y u user group in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized about of this n y u user group
	 */
	@AutoEscape
	public String getAbout(Locale locale);

	/**
	 * Returns the localized about of this n y u user group in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized about of this n y u user group. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getAbout(Locale locale, boolean useDefault);

	/**
	 * Returns the localized about of this n y u user group in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized about of this n y u user group
	 */
	@AutoEscape
	public String getAbout(String languageId);

	/**
	 * Returns the localized about of this n y u user group in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized about of this n y u user group
	 */
	@AutoEscape
	public String getAbout(String languageId, boolean useDefault);

	@AutoEscape
	public String getAboutCurrentLanguageId();

	@AutoEscape
	public String getAboutCurrentValue();

	/**
	 * Returns a map of the locales and localized abouts of this n y u user group.
	 *
	 * @return the locales and localized abouts of this n y u user group
	 */
	public Map<Locale, String> getAboutMap();

	/**
	 * Sets the about of this n y u user group.
	 *
	 * @param about the about of this n y u user group
	 */
	public void setAbout(String about);

	/**
	 * Sets the localized about of this n y u user group in the language.
	 *
	 * @param about the localized about of this n y u user group
	 * @param locale the locale of the language
	 */
	public void setAbout(String about, Locale locale);

	/**
	 * Sets the localized about of this n y u user group in the language, and sets the default locale.
	 *
	 * @param about the localized about of this n y u user group
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setAbout(String about, Locale locale, Locale defaultLocale);

	public void setAboutCurrentLanguageId(String languageId);

	/**
	 * Sets the localized abouts of this n y u user group from the map of locales and localized abouts.
	 *
	 * @param aboutMap the locales and localized abouts of this n y u user group
	 */
	public void setAboutMap(Map<Locale, String> aboutMap);

	/**
	 * Sets the localized abouts of this n y u user group from the map of locales and localized abouts, and sets the default locale.
	 *
	 * @param aboutMap the locales and localized abouts of this n y u user group
	 * @param defaultLocale the default locale
	 */
	public void setAboutMap(Map<Locale, String> aboutMap, Locale defaultLocale);

	/**
	 * Returns the title of this n y u user group.
	 *
	 * @return the title of this n y u user group
	 */
	public String getTitle();

	/**
	 * Returns the localized title of this n y u user group in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized title of this n y u user group
	 */
	@AutoEscape
	public String getTitle(Locale locale);

	/**
	 * Returns the localized title of this n y u user group in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this n y u user group. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getTitle(Locale locale, boolean useDefault);

	/**
	 * Returns the localized title of this n y u user group in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized title of this n y u user group
	 */
	@AutoEscape
	public String getTitle(String languageId);

	/**
	 * Returns the localized title of this n y u user group in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this n y u user group
	 */
	@AutoEscape
	public String getTitle(String languageId, boolean useDefault);

	@AutoEscape
	public String getTitleCurrentLanguageId();

	@AutoEscape
	public String getTitleCurrentValue();

	/**
	 * Returns a map of the locales and localized titles of this n y u user group.
	 *
	 * @return the locales and localized titles of this n y u user group
	 */
	public Map<Locale, String> getTitleMap();

	/**
	 * Sets the title of this n y u user group.
	 *
	 * @param title the title of this n y u user group
	 */
	public void setTitle(String title);

	/**
	 * Sets the localized title of this n y u user group in the language.
	 *
	 * @param title the localized title of this n y u user group
	 * @param locale the locale of the language
	 */
	public void setTitle(String title, Locale locale);

	/**
	 * Sets the localized title of this n y u user group in the language, and sets the default locale.
	 *
	 * @param title the localized title of this n y u user group
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setTitle(String title, Locale locale, Locale defaultLocale);

	public void setTitleCurrentLanguageId(String languageId);

	/**
	 * Sets the localized titles of this n y u user group from the map of locales and localized titles.
	 *
	 * @param titleMap the locales and localized titles of this n y u user group
	 */
	public void setTitleMap(Map<Locale, String> titleMap);

	/**
	 * Sets the localized titles of this n y u user group from the map of locales and localized titles, and sets the default locale.
	 *
	 * @param titleMap the locales and localized titles of this n y u user group
	 * @param defaultLocale the default locale
	 */
	public void setTitleMap(Map<Locale, String> titleMap, Locale defaultLocale);

	/**
	 * Returns the status of this n y u user group.
	 *
	 * @return the status of this n y u user group
	 */
	public int getStatus();

	/**
	 * Sets the status of this n y u user group.
	 *
	 * @param status the status of this n y u user group
	 */
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this n y u user group.
	 *
	 * @return the status by user ID of this n y u user group
	 */
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this n y u user group.
	 *
	 * @param statusByUserId the status by user ID of this n y u user group
	 */
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this n y u user group.
	 *
	 * @return the status by user uuid of this n y u user group
	 * @throws SystemException if a system exception occurred
	 */
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this n y u user group.
	 *
	 * @param statusByUserUuid the status by user uuid of this n y u user group
	 */
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status date of this n y u user group.
	 *
	 * @return the status date of this n y u user group
	 */
	public Date getStatusDate();

	/**
	 * Sets the status date of this n y u user group.
	 *
	 * @param statusDate the status date of this n y u user group
	 */
	public void setStatusDate(Date statusDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(NYUUserGroup nyuUserGroup);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NYUUserGroup> toCacheModel();

	@Override
	public NYUUserGroup toEscapedModel();

	@Override
	public NYUUserGroup toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}