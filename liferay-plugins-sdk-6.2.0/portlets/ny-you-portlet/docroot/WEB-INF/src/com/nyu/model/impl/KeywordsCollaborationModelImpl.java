/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.nyu.model.KeywordsCollaboration;
import com.nyu.model.KeywordsCollaborationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the KeywordsCollaboration service. Represents a row in the &quot;nyyou_KeywordsCollaboration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nyu.model.KeywordsCollaborationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KeywordsCollaborationImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see KeywordsCollaborationImpl
 * @see com.nyu.model.KeywordsCollaboration
 * @see com.nyu.model.KeywordsCollaborationModel
 * @generated
 */
public class KeywordsCollaborationModelImpl extends BaseModelImpl<KeywordsCollaboration>
	implements KeywordsCollaborationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a keywords collaboration model instance should use the {@link com.nyu.model.KeywordsCollaboration} interface instead.
	 */
	public static final String TABLE_NAME = "nyyou_KeywordsCollaboration";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "keywordId", Types.BIGINT },
			{ "keywordName", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "markAs", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table nyyou_KeywordsCollaboration (id_ LONG not null primary key IDENTITY,companyId LONG,groupId LONG,keywordId LONG,keywordName VARCHAR(1000) null,userId LONG,userName VARCHAR(1000) null,status VARCHAR(75) null,createdDate DATE null,modifiedDate DATE null,markAs VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table nyyou_KeywordsCollaboration";
	public static final String ORDER_BY_JPQL = " ORDER BY keywordsCollaboration.createdDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY nyyou_KeywordsCollaboration.createdDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nyu.model.KeywordsCollaboration"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nyu.model.KeywordsCollaboration"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.nyu.model.KeywordsCollaboration"),
			true);
	public static long KEYWORDID_COLUMN_BITMASK = 1L;
	public static long STATUS_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long CREATEDDATE_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nyu.model.KeywordsCollaboration"));

	public KeywordsCollaborationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KeywordsCollaboration.class;
	}

	@Override
	public String getModelClassName() {
		return KeywordsCollaboration.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("keywordId", getKeywordId());
		attributes.put("keywordName", getKeywordName());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("status", getStatus());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("markAs", getMarkAs());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long keywordId = (Long)attributes.get("keywordId");

		if (keywordId != null) {
			setKeywordId(keywordId);
		}

		String keywordName = (String)attributes.get("keywordName");

		if (keywordName != null) {
			setKeywordName(keywordName);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String markAs = (String)attributes.get("markAs");

		if (markAs != null) {
			setMarkAs(markAs);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getKeywordId() {
		return _keywordId;
	}

	@Override
	public void setKeywordId(long keywordId) {
		_columnBitmask |= KEYWORDID_COLUMN_BITMASK;

		if (!_setOriginalKeywordId) {
			_setOriginalKeywordId = true;

			_originalKeywordId = _keywordId;
		}

		_keywordId = keywordId;
	}

	public long getOriginalKeywordId() {
		return _originalKeywordId;
	}

	@Override
	public String getKeywordName() {
		if (_keywordName == null) {
			return StringPool.BLANK;
		}
		else {
			return _keywordName;
		}
	}

	@Override
	public void setKeywordName(String keywordName) {
		_keywordName = keywordName;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_columnBitmask = -1L;

		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getMarkAs() {
		if (_markAs == null) {
			return StringPool.BLANK;
		}
		else {
			return _markAs;
		}
	}

	@Override
	public void setMarkAs(String markAs) {
		_markAs = markAs;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			KeywordsCollaboration.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KeywordsCollaboration toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (KeywordsCollaboration)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KeywordsCollaborationImpl keywordsCollaborationImpl = new KeywordsCollaborationImpl();

		keywordsCollaborationImpl.setId(getId());
		keywordsCollaborationImpl.setCompanyId(getCompanyId());
		keywordsCollaborationImpl.setGroupId(getGroupId());
		keywordsCollaborationImpl.setKeywordId(getKeywordId());
		keywordsCollaborationImpl.setKeywordName(getKeywordName());
		keywordsCollaborationImpl.setUserId(getUserId());
		keywordsCollaborationImpl.setUserName(getUserName());
		keywordsCollaborationImpl.setStatus(getStatus());
		keywordsCollaborationImpl.setCreatedDate(getCreatedDate());
		keywordsCollaborationImpl.setModifiedDate(getModifiedDate());
		keywordsCollaborationImpl.setMarkAs(getMarkAs());

		keywordsCollaborationImpl.resetOriginalValues();

		return keywordsCollaborationImpl;
	}

	@Override
	public int compareTo(KeywordsCollaboration keywordsCollaboration) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedDate(),
				keywordsCollaboration.getCreatedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KeywordsCollaboration)) {
			return false;
		}

		KeywordsCollaboration keywordsCollaboration = (KeywordsCollaboration)obj;

		long primaryKey = keywordsCollaboration.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		KeywordsCollaborationModelImpl keywordsCollaborationModelImpl = this;

		keywordsCollaborationModelImpl._originalKeywordId = keywordsCollaborationModelImpl._keywordId;

		keywordsCollaborationModelImpl._setOriginalKeywordId = false;

		keywordsCollaborationModelImpl._originalUserId = keywordsCollaborationModelImpl._userId;

		keywordsCollaborationModelImpl._setOriginalUserId = false;

		keywordsCollaborationModelImpl._originalStatus = keywordsCollaborationModelImpl._status;

		keywordsCollaborationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<KeywordsCollaboration> toCacheModel() {
		KeywordsCollaborationCacheModel keywordsCollaborationCacheModel = new KeywordsCollaborationCacheModel();

		keywordsCollaborationCacheModel.id = getId();

		keywordsCollaborationCacheModel.companyId = getCompanyId();

		keywordsCollaborationCacheModel.groupId = getGroupId();

		keywordsCollaborationCacheModel.keywordId = getKeywordId();

		keywordsCollaborationCacheModel.keywordName = getKeywordName();

		String keywordName = keywordsCollaborationCacheModel.keywordName;

		if ((keywordName != null) && (keywordName.length() == 0)) {
			keywordsCollaborationCacheModel.keywordName = null;
		}

		keywordsCollaborationCacheModel.userId = getUserId();

		keywordsCollaborationCacheModel.userName = getUserName();

		String userName = keywordsCollaborationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			keywordsCollaborationCacheModel.userName = null;
		}

		keywordsCollaborationCacheModel.status = getStatus();

		String status = keywordsCollaborationCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			keywordsCollaborationCacheModel.status = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			keywordsCollaborationCacheModel.createdDate = createdDate.getTime();
		}
		else {
			keywordsCollaborationCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			keywordsCollaborationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			keywordsCollaborationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		keywordsCollaborationCacheModel.markAs = getMarkAs();

		String markAs = keywordsCollaborationCacheModel.markAs;

		if ((markAs != null) && (markAs.length() == 0)) {
			keywordsCollaborationCacheModel.markAs = null;
		}

		return keywordsCollaborationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", keywordId=");
		sb.append(getKeywordId());
		sb.append(", keywordName=");
		sb.append(getKeywordName());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", markAs=");
		sb.append(getMarkAs());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.nyu.model.KeywordsCollaboration");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keywordId</column-name><column-value><![CDATA[");
		sb.append(getKeywordId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>keywordName</column-name><column-value><![CDATA[");
		sb.append(getKeywordName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>markAs</column-name><column-value><![CDATA[");
		sb.append(getMarkAs());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = KeywordsCollaboration.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			KeywordsCollaboration.class
		};
	private long _id;
	private long _companyId;
	private long _groupId;
	private long _keywordId;
	private long _originalKeywordId;
	private boolean _setOriginalKeywordId;
	private String _keywordName;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private String _status;
	private String _originalStatus;
	private Date _createdDate;
	private Date _modifiedDate;
	private String _markAs;
	private long _columnBitmask;
	private KeywordsCollaboration _escapedModel;
}