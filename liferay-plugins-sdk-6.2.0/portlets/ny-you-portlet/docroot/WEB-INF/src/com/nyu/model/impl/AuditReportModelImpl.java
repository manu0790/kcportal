/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.nyu.model.AuditReport;
import com.nyu.model.AuditReportModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AuditReport service. Represents a row in the &quot;nyyou_AuditReport&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nyu.model.AuditReportModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditReportImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see AuditReportImpl
 * @see com.nyu.model.AuditReport
 * @see com.nyu.model.AuditReportModel
 * @generated
 */
public class AuditReportModelImpl extends BaseModelImpl<AuditReport>
	implements AuditReportModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a audit report model instance should use the {@link com.nyu.model.AuditReport} interface instead.
	 */
	public static final String TABLE_NAME = "nyyou_AuditReport";
	public static final Object[][] TABLE_COLUMNS = {
			{ "auditEventId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "eventType", Types.VARCHAR },
			{ "className", Types.VARCHAR },
			{ "classPK", Types.VARCHAR },
			{ "message", Types.VARCHAR },
			{ "clientHost", Types.VARCHAR },
			{ "clientIP", Types.VARCHAR },
			{ "serverName", Types.VARCHAR },
			{ "serverPort", Types.INTEGER },
			{ "sessionID", Types.VARCHAR },
			{ "additionalInfo", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table nyyou_AuditReport (auditEventId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,eventType VARCHAR(75) null,className VARCHAR(500) null,classPK VARCHAR(75) null,message VARCHAR(1000) null,clientHost VARCHAR(75) null,clientIP VARCHAR(75) null,serverName VARCHAR(500) null,serverPort INTEGER,sessionID VARCHAR(75) null,additionalInfo VARCHAR(1000) null)";
	public static final String TABLE_SQL_DROP = "drop table nyyou_AuditReport";
	public static final String ORDER_BY_JPQL = " ORDER BY auditReport.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY nyyou_AuditReport.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nyu.model.AuditReport"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nyu.model.AuditReport"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.nyu.model.AuditReport"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long EVENTTYPE_COLUMN_BITMASK = 2L;
	public static long CREATEDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nyu.model.AuditReport"));

	public AuditReportModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _auditEventId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAuditEventId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _auditEventId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AuditReport.class;
	}

	@Override
	public String getModelClassName() {
		return AuditReport.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("auditEventId", getAuditEventId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("eventType", getEventType());
		attributes.put("className", getClassName());
		attributes.put("classPK", getClassPK());
		attributes.put("message", getMessage());
		attributes.put("clientHost", getClientHost());
		attributes.put("clientIP", getClientIP());
		attributes.put("serverName", getServerName());
		attributes.put("serverPort", getServerPort());
		attributes.put("sessionID", getSessionID());
		attributes.put("additionalInfo", getAdditionalInfo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long auditEventId = (Long)attributes.get("auditEventId");

		if (auditEventId != null) {
			setAuditEventId(auditEventId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String eventType = (String)attributes.get("eventType");

		if (eventType != null) {
			setEventType(eventType);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		String classPK = (String)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String message = (String)attributes.get("message");

		if (message != null) {
			setMessage(message);
		}

		String clientHost = (String)attributes.get("clientHost");

		if (clientHost != null) {
			setClientHost(clientHost);
		}

		String clientIP = (String)attributes.get("clientIP");

		if (clientIP != null) {
			setClientIP(clientIP);
		}

		String serverName = (String)attributes.get("serverName");

		if (serverName != null) {
			setServerName(serverName);
		}

		Integer serverPort = (Integer)attributes.get("serverPort");

		if (serverPort != null) {
			setServerPort(serverPort);
		}

		String sessionID = (String)attributes.get("sessionID");

		if (sessionID != null) {
			setSessionID(sessionID);
		}

		String additionalInfo = (String)attributes.get("additionalInfo");

		if (additionalInfo != null) {
			setAdditionalInfo(additionalInfo);
		}
	}

	@Override
	public long getAuditEventId() {
		return _auditEventId;
	}

	@Override
	public void setAuditEventId(long auditEventId) {
		_auditEventId = auditEventId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public String getEventType() {
		if (_eventType == null) {
			return StringPool.BLANK;
		}
		else {
			return _eventType;
		}
	}

	@Override
	public void setEventType(String eventType) {
		_columnBitmask |= EVENTTYPE_COLUMN_BITMASK;

		if (_originalEventType == null) {
			_originalEventType = _eventType;
		}

		_eventType = eventType;
	}

	public String getOriginalEventType() {
		return GetterUtil.getString(_originalEventType);
	}

	@Override
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_className = className;
	}

	@Override
	public String getClassPK() {
		if (_classPK == null) {
			return StringPool.BLANK;
		}
		else {
			return _classPK;
		}
	}

	@Override
	public void setClassPK(String classPK) {
		_classPK = classPK;
	}

	@Override
	public String getMessage() {
		if (_message == null) {
			return StringPool.BLANK;
		}
		else {
			return _message;
		}
	}

	@Override
	public void setMessage(String message) {
		_message = message;
	}

	@Override
	public String getClientHost() {
		if (_clientHost == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientHost;
		}
	}

	@Override
	public void setClientHost(String clientHost) {
		_clientHost = clientHost;
	}

	@Override
	public String getClientIP() {
		if (_clientIP == null) {
			return StringPool.BLANK;
		}
		else {
			return _clientIP;
		}
	}

	@Override
	public void setClientIP(String clientIP) {
		_clientIP = clientIP;
	}

	@Override
	public String getServerName() {
		if (_serverName == null) {
			return StringPool.BLANK;
		}
		else {
			return _serverName;
		}
	}

	@Override
	public void setServerName(String serverName) {
		_serverName = serverName;
	}

	@Override
	public int getServerPort() {
		return _serverPort;
	}

	@Override
	public void setServerPort(int serverPort) {
		_serverPort = serverPort;
	}

	@Override
	public String getSessionID() {
		if (_sessionID == null) {
			return StringPool.BLANK;
		}
		else {
			return _sessionID;
		}
	}

	@Override
	public void setSessionID(String sessionID) {
		_sessionID = sessionID;
	}

	@Override
	public String getAdditionalInfo() {
		if (_additionalInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _additionalInfo;
		}
	}

	@Override
	public void setAdditionalInfo(String additionalInfo) {
		_additionalInfo = additionalInfo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AuditReport.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AuditReport toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AuditReport)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AuditReportImpl auditReportImpl = new AuditReportImpl();

		auditReportImpl.setAuditEventId(getAuditEventId());
		auditReportImpl.setCompanyId(getCompanyId());
		auditReportImpl.setGroupId(getGroupId());
		auditReportImpl.setUserId(getUserId());
		auditReportImpl.setUserName(getUserName());
		auditReportImpl.setCreateDate(getCreateDate());
		auditReportImpl.setEventType(getEventType());
		auditReportImpl.setClassName(getClassName());
		auditReportImpl.setClassPK(getClassPK());
		auditReportImpl.setMessage(getMessage());
		auditReportImpl.setClientHost(getClientHost());
		auditReportImpl.setClientIP(getClientIP());
		auditReportImpl.setServerName(getServerName());
		auditReportImpl.setServerPort(getServerPort());
		auditReportImpl.setSessionID(getSessionID());
		auditReportImpl.setAdditionalInfo(getAdditionalInfo());

		auditReportImpl.resetOriginalValues();

		return auditReportImpl;
	}

	@Override
	public int compareTo(AuditReport auditReport) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), auditReport.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AuditReport)) {
			return false;
		}

		AuditReport auditReport = (AuditReport)obj;

		long primaryKey = auditReport.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AuditReportModelImpl auditReportModelImpl = this;

		auditReportModelImpl._originalCompanyId = auditReportModelImpl._companyId;

		auditReportModelImpl._setOriginalCompanyId = false;

		auditReportModelImpl._originalEventType = auditReportModelImpl._eventType;

		auditReportModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AuditReport> toCacheModel() {
		AuditReportCacheModel auditReportCacheModel = new AuditReportCacheModel();

		auditReportCacheModel.auditEventId = getAuditEventId();

		auditReportCacheModel.companyId = getCompanyId();

		auditReportCacheModel.groupId = getGroupId();

		auditReportCacheModel.userId = getUserId();

		auditReportCacheModel.userName = getUserName();

		String userName = auditReportCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			auditReportCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			auditReportCacheModel.createDate = createDate.getTime();
		}
		else {
			auditReportCacheModel.createDate = Long.MIN_VALUE;
		}

		auditReportCacheModel.eventType = getEventType();

		String eventType = auditReportCacheModel.eventType;

		if ((eventType != null) && (eventType.length() == 0)) {
			auditReportCacheModel.eventType = null;
		}

		auditReportCacheModel.className = getClassName();

		String className = auditReportCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			auditReportCacheModel.className = null;
		}

		auditReportCacheModel.classPK = getClassPK();

		String classPK = auditReportCacheModel.classPK;

		if ((classPK != null) && (classPK.length() == 0)) {
			auditReportCacheModel.classPK = null;
		}

		auditReportCacheModel.message = getMessage();

		String message = auditReportCacheModel.message;

		if ((message != null) && (message.length() == 0)) {
			auditReportCacheModel.message = null;
		}

		auditReportCacheModel.clientHost = getClientHost();

		String clientHost = auditReportCacheModel.clientHost;

		if ((clientHost != null) && (clientHost.length() == 0)) {
			auditReportCacheModel.clientHost = null;
		}

		auditReportCacheModel.clientIP = getClientIP();

		String clientIP = auditReportCacheModel.clientIP;

		if ((clientIP != null) && (clientIP.length() == 0)) {
			auditReportCacheModel.clientIP = null;
		}

		auditReportCacheModel.serverName = getServerName();

		String serverName = auditReportCacheModel.serverName;

		if ((serverName != null) && (serverName.length() == 0)) {
			auditReportCacheModel.serverName = null;
		}

		auditReportCacheModel.serverPort = getServerPort();

		auditReportCacheModel.sessionID = getSessionID();

		String sessionID = auditReportCacheModel.sessionID;

		if ((sessionID != null) && (sessionID.length() == 0)) {
			auditReportCacheModel.sessionID = null;
		}

		auditReportCacheModel.additionalInfo = getAdditionalInfo();

		String additionalInfo = auditReportCacheModel.additionalInfo;

		if ((additionalInfo != null) && (additionalInfo.length() == 0)) {
			auditReportCacheModel.additionalInfo = null;
		}

		return auditReportCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{auditEventId=");
		sb.append(getAuditEventId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", eventType=");
		sb.append(getEventType());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", message=");
		sb.append(getMessage());
		sb.append(", clientHost=");
		sb.append(getClientHost());
		sb.append(", clientIP=");
		sb.append(getClientIP());
		sb.append(", serverName=");
		sb.append(getServerName());
		sb.append(", serverPort=");
		sb.append(getServerPort());
		sb.append(", sessionID=");
		sb.append(getSessionID());
		sb.append(", additionalInfo=");
		sb.append(getAdditionalInfo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.nyu.model.AuditReport");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>auditEventId</column-name><column-value><![CDATA[");
		sb.append(getAuditEventId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventType</column-name><column-value><![CDATA[");
		sb.append(getEventType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>message</column-name><column-value><![CDATA[");
		sb.append(getMessage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientHost</column-name><column-value><![CDATA[");
		sb.append(getClientHost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clientIP</column-name><column-value><![CDATA[");
		sb.append(getClientIP());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serverName</column-name><column-value><![CDATA[");
		sb.append(getServerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serverPort</column-name><column-value><![CDATA[");
		sb.append(getServerPort());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sessionID</column-name><column-value><![CDATA[");
		sb.append(getSessionID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalInfo</column-name><column-value><![CDATA[");
		sb.append(getAdditionalInfo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AuditReport.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AuditReport.class
		};
	private long _auditEventId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private String _eventType;
	private String _originalEventType;
	private String _className;
	private String _classPK;
	private String _message;
	private String _clientHost;
	private String _clientIP;
	private String _serverName;
	private int _serverPort;
	private String _sessionID;
	private String _additionalInfo;
	private long _columnBitmask;
	private AuditReport _escapedModel;
}