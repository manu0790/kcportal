/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.nyu.model.LessonObjectives;

import com.nyu.service.LessonObjectivesLocalService;
import com.nyu.service.persistence.AnswerRequestPersistence;
import com.nyu.service.persistence.AuditReportPersistence;
import com.nyu.service.persistence.BasnoPersistence;
import com.nyu.service.persistence.DocumentFilePersistence;
import com.nyu.service.persistence.DocumentSectionPersistence;
import com.nyu.service.persistence.FavouriteLessonsPersistence;
import com.nyu.service.persistence.KeywordsCollaborationPersistence;
import com.nyu.service.persistence.KeywordsPersistence;
import com.nyu.service.persistence.LessonCollaborationPersistence;
import com.nyu.service.persistence.LessonFinder;
import com.nyu.service.persistence.LessonObjectivesPersistence;
import com.nyu.service.persistence.LessonPersistence;
import com.nyu.service.persistence.Lesson_UsergroupsPersistence;
import com.nyu.service.persistence.NYUUserGroupFinder;
import com.nyu.service.persistence.NYUUserGroupPersistence;
import com.nyu.service.persistence.RequestLessonFinder;
import com.nyu.service.persistence.RequestLessonPersistence;
import com.nyu.service.persistence.SlidesPersistence;
import com.nyu.service.persistence.UserBadgesPersistence;
import com.nyu.service.persistence.UserGroupRequestPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the lesson objectives local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.nyu.service.impl.LessonObjectivesLocalServiceImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see com.nyu.service.impl.LessonObjectivesLocalServiceImpl
 * @see com.nyu.service.LessonObjectivesLocalServiceUtil
 * @generated
 */
public abstract class LessonObjectivesLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements LessonObjectivesLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.nyu.service.LessonObjectivesLocalServiceUtil} to access the lesson objectives local service.
	 */

	/**
	 * Adds the lesson objectives to the database. Also notifies the appropriate model listeners.
	 *
	 * @param lessonObjectives the lesson objectives
	 * @return the lesson objectives that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LessonObjectives addLessonObjectives(
		LessonObjectives lessonObjectives) throws SystemException {
		lessonObjectives.setNew(true);

		return lessonObjectivesPersistence.update(lessonObjectives);
	}

	/**
	 * Creates a new lesson objectives with the primary key. Does not add the lesson objectives to the database.
	 *
	 * @param id the primary key for the new lesson objectives
	 * @return the new lesson objectives
	 */
	@Override
	public LessonObjectives createLessonObjectives(long id) {
		return lessonObjectivesPersistence.create(id);
	}

	/**
	 * Deletes the lesson objectives with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the lesson objectives
	 * @return the lesson objectives that was removed
	 * @throws PortalException if a lesson objectives with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LessonObjectives deleteLessonObjectives(long id)
		throws PortalException, SystemException {
		return lessonObjectivesPersistence.remove(id);
	}

	/**
	 * Deletes the lesson objectives from the database. Also notifies the appropriate model listeners.
	 *
	 * @param lessonObjectives the lesson objectives
	 * @return the lesson objectives that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public LessonObjectives deleteLessonObjectives(
		LessonObjectives lessonObjectives) throws SystemException {
		return lessonObjectivesPersistence.remove(lessonObjectives);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(LessonObjectives.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return lessonObjectivesPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.nyu.model.impl.LessonObjectivesModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return lessonObjectivesPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.nyu.model.impl.LessonObjectivesModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return lessonObjectivesPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return lessonObjectivesPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return lessonObjectivesPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public LessonObjectives fetchLessonObjectives(long id)
		throws SystemException {
		return lessonObjectivesPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the lesson objectives with the primary key.
	 *
	 * @param id the primary key of the lesson objectives
	 * @return the lesson objectives
	 * @throws PortalException if a lesson objectives with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public LessonObjectives getLessonObjectives(long id)
		throws PortalException, SystemException {
		return lessonObjectivesPersistence.findByPrimaryKey(id);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return lessonObjectivesPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the lesson objectiveses.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.nyu.model.impl.LessonObjectivesModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of lesson objectiveses
	 * @param end the upper bound of the range of lesson objectiveses (not inclusive)
	 * @return the range of lesson objectiveses
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<LessonObjectives> getLessonObjectiveses(int start, int end)
		throws SystemException {
		return lessonObjectivesPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of lesson objectiveses.
	 *
	 * @return the number of lesson objectiveses
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getLessonObjectivesesCount() throws SystemException {
		return lessonObjectivesPersistence.countAll();
	}

	/**
	 * Updates the lesson objectives in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param lessonObjectives the lesson objectives
	 * @return the lesson objectives that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public LessonObjectives updateLessonObjectives(
		LessonObjectives lessonObjectives) throws SystemException {
		return lessonObjectivesPersistence.update(lessonObjectives);
	}

	/**
	 * Returns the answer request local service.
	 *
	 * @return the answer request local service
	 */
	public com.nyu.service.AnswerRequestLocalService getAnswerRequestLocalService() {
		return answerRequestLocalService;
	}

	/**
	 * Sets the answer request local service.
	 *
	 * @param answerRequestLocalService the answer request local service
	 */
	public void setAnswerRequestLocalService(
		com.nyu.service.AnswerRequestLocalService answerRequestLocalService) {
		this.answerRequestLocalService = answerRequestLocalService;
	}

	/**
	 * Returns the answer request persistence.
	 *
	 * @return the answer request persistence
	 */
	public AnswerRequestPersistence getAnswerRequestPersistence() {
		return answerRequestPersistence;
	}

	/**
	 * Sets the answer request persistence.
	 *
	 * @param answerRequestPersistence the answer request persistence
	 */
	public void setAnswerRequestPersistence(
		AnswerRequestPersistence answerRequestPersistence) {
		this.answerRequestPersistence = answerRequestPersistence;
	}

	/**
	 * Returns the audit report local service.
	 *
	 * @return the audit report local service
	 */
	public com.nyu.service.AuditReportLocalService getAuditReportLocalService() {
		return auditReportLocalService;
	}

	/**
	 * Sets the audit report local service.
	 *
	 * @param auditReportLocalService the audit report local service
	 */
	public void setAuditReportLocalService(
		com.nyu.service.AuditReportLocalService auditReportLocalService) {
		this.auditReportLocalService = auditReportLocalService;
	}

	/**
	 * Returns the audit report persistence.
	 *
	 * @return the audit report persistence
	 */
	public AuditReportPersistence getAuditReportPersistence() {
		return auditReportPersistence;
	}

	/**
	 * Sets the audit report persistence.
	 *
	 * @param auditReportPersistence the audit report persistence
	 */
	public void setAuditReportPersistence(
		AuditReportPersistence auditReportPersistence) {
		this.auditReportPersistence = auditReportPersistence;
	}

	/**
	 * Returns the basno local service.
	 *
	 * @return the basno local service
	 */
	public com.nyu.service.BasnoLocalService getBasnoLocalService() {
		return basnoLocalService;
	}

	/**
	 * Sets the basno local service.
	 *
	 * @param basnoLocalService the basno local service
	 */
	public void setBasnoLocalService(
		com.nyu.service.BasnoLocalService basnoLocalService) {
		this.basnoLocalService = basnoLocalService;
	}

	/**
	 * Returns the basno persistence.
	 *
	 * @return the basno persistence
	 */
	public BasnoPersistence getBasnoPersistence() {
		return basnoPersistence;
	}

	/**
	 * Sets the basno persistence.
	 *
	 * @param basnoPersistence the basno persistence
	 */
	public void setBasnoPersistence(BasnoPersistence basnoPersistence) {
		this.basnoPersistence = basnoPersistence;
	}

	/**
	 * Returns the document file local service.
	 *
	 * @return the document file local service
	 */
	public com.nyu.service.DocumentFileLocalService getDocumentFileLocalService() {
		return documentFileLocalService;
	}

	/**
	 * Sets the document file local service.
	 *
	 * @param documentFileLocalService the document file local service
	 */
	public void setDocumentFileLocalService(
		com.nyu.service.DocumentFileLocalService documentFileLocalService) {
		this.documentFileLocalService = documentFileLocalService;
	}

	/**
	 * Returns the document file persistence.
	 *
	 * @return the document file persistence
	 */
	public DocumentFilePersistence getDocumentFilePersistence() {
		return documentFilePersistence;
	}

	/**
	 * Sets the document file persistence.
	 *
	 * @param documentFilePersistence the document file persistence
	 */
	public void setDocumentFilePersistence(
		DocumentFilePersistence documentFilePersistence) {
		this.documentFilePersistence = documentFilePersistence;
	}

	/**
	 * Returns the document section local service.
	 *
	 * @return the document section local service
	 */
	public com.nyu.service.DocumentSectionLocalService getDocumentSectionLocalService() {
		return documentSectionLocalService;
	}

	/**
	 * Sets the document section local service.
	 *
	 * @param documentSectionLocalService the document section local service
	 */
	public void setDocumentSectionLocalService(
		com.nyu.service.DocumentSectionLocalService documentSectionLocalService) {
		this.documentSectionLocalService = documentSectionLocalService;
	}

	/**
	 * Returns the document section persistence.
	 *
	 * @return the document section persistence
	 */
	public DocumentSectionPersistence getDocumentSectionPersistence() {
		return documentSectionPersistence;
	}

	/**
	 * Sets the document section persistence.
	 *
	 * @param documentSectionPersistence the document section persistence
	 */
	public void setDocumentSectionPersistence(
		DocumentSectionPersistence documentSectionPersistence) {
		this.documentSectionPersistence = documentSectionPersistence;
	}

	/**
	 * Returns the favourite lessons local service.
	 *
	 * @return the favourite lessons local service
	 */
	public com.nyu.service.FavouriteLessonsLocalService getFavouriteLessonsLocalService() {
		return favouriteLessonsLocalService;
	}

	/**
	 * Sets the favourite lessons local service.
	 *
	 * @param favouriteLessonsLocalService the favourite lessons local service
	 */
	public void setFavouriteLessonsLocalService(
		com.nyu.service.FavouriteLessonsLocalService favouriteLessonsLocalService) {
		this.favouriteLessonsLocalService = favouriteLessonsLocalService;
	}

	/**
	 * Returns the favourite lessons persistence.
	 *
	 * @return the favourite lessons persistence
	 */
	public FavouriteLessonsPersistence getFavouriteLessonsPersistence() {
		return favouriteLessonsPersistence;
	}

	/**
	 * Sets the favourite lessons persistence.
	 *
	 * @param favouriteLessonsPersistence the favourite lessons persistence
	 */
	public void setFavouriteLessonsPersistence(
		FavouriteLessonsPersistence favouriteLessonsPersistence) {
		this.favouriteLessonsPersistence = favouriteLessonsPersistence;
	}

	/**
	 * Returns the keywords local service.
	 *
	 * @return the keywords local service
	 */
	public com.nyu.service.KeywordsLocalService getKeywordsLocalService() {
		return keywordsLocalService;
	}

	/**
	 * Sets the keywords local service.
	 *
	 * @param keywordsLocalService the keywords local service
	 */
	public void setKeywordsLocalService(
		com.nyu.service.KeywordsLocalService keywordsLocalService) {
		this.keywordsLocalService = keywordsLocalService;
	}

	/**
	 * Returns the keywords persistence.
	 *
	 * @return the keywords persistence
	 */
	public KeywordsPersistence getKeywordsPersistence() {
		return keywordsPersistence;
	}

	/**
	 * Sets the keywords persistence.
	 *
	 * @param keywordsPersistence the keywords persistence
	 */
	public void setKeywordsPersistence(KeywordsPersistence keywordsPersistence) {
		this.keywordsPersistence = keywordsPersistence;
	}

	/**
	 * Returns the keywords collaboration local service.
	 *
	 * @return the keywords collaboration local service
	 */
	public com.nyu.service.KeywordsCollaborationLocalService getKeywordsCollaborationLocalService() {
		return keywordsCollaborationLocalService;
	}

	/**
	 * Sets the keywords collaboration local service.
	 *
	 * @param keywordsCollaborationLocalService the keywords collaboration local service
	 */
	public void setKeywordsCollaborationLocalService(
		com.nyu.service.KeywordsCollaborationLocalService keywordsCollaborationLocalService) {
		this.keywordsCollaborationLocalService = keywordsCollaborationLocalService;
	}

	/**
	 * Returns the keywords collaboration persistence.
	 *
	 * @return the keywords collaboration persistence
	 */
	public KeywordsCollaborationPersistence getKeywordsCollaborationPersistence() {
		return keywordsCollaborationPersistence;
	}

	/**
	 * Sets the keywords collaboration persistence.
	 *
	 * @param keywordsCollaborationPersistence the keywords collaboration persistence
	 */
	public void setKeywordsCollaborationPersistence(
		KeywordsCollaborationPersistence keywordsCollaborationPersistence) {
		this.keywordsCollaborationPersistence = keywordsCollaborationPersistence;
	}

	/**
	 * Returns the lesson local service.
	 *
	 * @return the lesson local service
	 */
	public com.nyu.service.LessonLocalService getLessonLocalService() {
		return lessonLocalService;
	}

	/**
	 * Sets the lesson local service.
	 *
	 * @param lessonLocalService the lesson local service
	 */
	public void setLessonLocalService(
		com.nyu.service.LessonLocalService lessonLocalService) {
		this.lessonLocalService = lessonLocalService;
	}

	/**
	 * Returns the lesson persistence.
	 *
	 * @return the lesson persistence
	 */
	public LessonPersistence getLessonPersistence() {
		return lessonPersistence;
	}

	/**
	 * Sets the lesson persistence.
	 *
	 * @param lessonPersistence the lesson persistence
	 */
	public void setLessonPersistence(LessonPersistence lessonPersistence) {
		this.lessonPersistence = lessonPersistence;
	}

	/**
	 * Returns the lesson finder.
	 *
	 * @return the lesson finder
	 */
	public LessonFinder getLessonFinder() {
		return lessonFinder;
	}

	/**
	 * Sets the lesson finder.
	 *
	 * @param lessonFinder the lesson finder
	 */
	public void setLessonFinder(LessonFinder lessonFinder) {
		this.lessonFinder = lessonFinder;
	}

	/**
	 * Returns the lesson_ usergroups local service.
	 *
	 * @return the lesson_ usergroups local service
	 */
	public com.nyu.service.Lesson_UsergroupsLocalService getLesson_UsergroupsLocalService() {
		return lesson_UsergroupsLocalService;
	}

	/**
	 * Sets the lesson_ usergroups local service.
	 *
	 * @param lesson_UsergroupsLocalService the lesson_ usergroups local service
	 */
	public void setLesson_UsergroupsLocalService(
		com.nyu.service.Lesson_UsergroupsLocalService lesson_UsergroupsLocalService) {
		this.lesson_UsergroupsLocalService = lesson_UsergroupsLocalService;
	}

	/**
	 * Returns the lesson_ usergroups persistence.
	 *
	 * @return the lesson_ usergroups persistence
	 */
	public Lesson_UsergroupsPersistence getLesson_UsergroupsPersistence() {
		return lesson_UsergroupsPersistence;
	}

	/**
	 * Sets the lesson_ usergroups persistence.
	 *
	 * @param lesson_UsergroupsPersistence the lesson_ usergroups persistence
	 */
	public void setLesson_UsergroupsPersistence(
		Lesson_UsergroupsPersistence lesson_UsergroupsPersistence) {
		this.lesson_UsergroupsPersistence = lesson_UsergroupsPersistence;
	}

	/**
	 * Returns the lesson collaboration local service.
	 *
	 * @return the lesson collaboration local service
	 */
	public com.nyu.service.LessonCollaborationLocalService getLessonCollaborationLocalService() {
		return lessonCollaborationLocalService;
	}

	/**
	 * Sets the lesson collaboration local service.
	 *
	 * @param lessonCollaborationLocalService the lesson collaboration local service
	 */
	public void setLessonCollaborationLocalService(
		com.nyu.service.LessonCollaborationLocalService lessonCollaborationLocalService) {
		this.lessonCollaborationLocalService = lessonCollaborationLocalService;
	}

	/**
	 * Returns the lesson collaboration persistence.
	 *
	 * @return the lesson collaboration persistence
	 */
	public LessonCollaborationPersistence getLessonCollaborationPersistence() {
		return lessonCollaborationPersistence;
	}

	/**
	 * Sets the lesson collaboration persistence.
	 *
	 * @param lessonCollaborationPersistence the lesson collaboration persistence
	 */
	public void setLessonCollaborationPersistence(
		LessonCollaborationPersistence lessonCollaborationPersistence) {
		this.lessonCollaborationPersistence = lessonCollaborationPersistence;
	}

	/**
	 * Returns the lesson objectives local service.
	 *
	 * @return the lesson objectives local service
	 */
	public com.nyu.service.LessonObjectivesLocalService getLessonObjectivesLocalService() {
		return lessonObjectivesLocalService;
	}

	/**
	 * Sets the lesson objectives local service.
	 *
	 * @param lessonObjectivesLocalService the lesson objectives local service
	 */
	public void setLessonObjectivesLocalService(
		com.nyu.service.LessonObjectivesLocalService lessonObjectivesLocalService) {
		this.lessonObjectivesLocalService = lessonObjectivesLocalService;
	}

	/**
	 * Returns the lesson objectives persistence.
	 *
	 * @return the lesson objectives persistence
	 */
	public LessonObjectivesPersistence getLessonObjectivesPersistence() {
		return lessonObjectivesPersistence;
	}

	/**
	 * Sets the lesson objectives persistence.
	 *
	 * @param lessonObjectivesPersistence the lesson objectives persistence
	 */
	public void setLessonObjectivesPersistence(
		LessonObjectivesPersistence lessonObjectivesPersistence) {
		this.lessonObjectivesPersistence = lessonObjectivesPersistence;
	}

	/**
	 * Returns the n y u user group local service.
	 *
	 * @return the n y u user group local service
	 */
	public com.nyu.service.NYUUserGroupLocalService getNYUUserGroupLocalService() {
		return nyuUserGroupLocalService;
	}

	/**
	 * Sets the n y u user group local service.
	 *
	 * @param nyuUserGroupLocalService the n y u user group local service
	 */
	public void setNYUUserGroupLocalService(
		com.nyu.service.NYUUserGroupLocalService nyuUserGroupLocalService) {
		this.nyuUserGroupLocalService = nyuUserGroupLocalService;
	}

	/**
	 * Returns the n y u user group persistence.
	 *
	 * @return the n y u user group persistence
	 */
	public NYUUserGroupPersistence getNYUUserGroupPersistence() {
		return nyuUserGroupPersistence;
	}

	/**
	 * Sets the n y u user group persistence.
	 *
	 * @param nyuUserGroupPersistence the n y u user group persistence
	 */
	public void setNYUUserGroupPersistence(
		NYUUserGroupPersistence nyuUserGroupPersistence) {
		this.nyuUserGroupPersistence = nyuUserGroupPersistence;
	}

	/**
	 * Returns the n y u user group finder.
	 *
	 * @return the n y u user group finder
	 */
	public NYUUserGroupFinder getNYUUserGroupFinder() {
		return nyuUserGroupFinder;
	}

	/**
	 * Sets the n y u user group finder.
	 *
	 * @param nyuUserGroupFinder the n y u user group finder
	 */
	public void setNYUUserGroupFinder(NYUUserGroupFinder nyuUserGroupFinder) {
		this.nyuUserGroupFinder = nyuUserGroupFinder;
	}

	/**
	 * Returns the request lesson local service.
	 *
	 * @return the request lesson local service
	 */
	public com.nyu.service.RequestLessonLocalService getRequestLessonLocalService() {
		return requestLessonLocalService;
	}

	/**
	 * Sets the request lesson local service.
	 *
	 * @param requestLessonLocalService the request lesson local service
	 */
	public void setRequestLessonLocalService(
		com.nyu.service.RequestLessonLocalService requestLessonLocalService) {
		this.requestLessonLocalService = requestLessonLocalService;
	}

	/**
	 * Returns the request lesson persistence.
	 *
	 * @return the request lesson persistence
	 */
	public RequestLessonPersistence getRequestLessonPersistence() {
		return requestLessonPersistence;
	}

	/**
	 * Sets the request lesson persistence.
	 *
	 * @param requestLessonPersistence the request lesson persistence
	 */
	public void setRequestLessonPersistence(
		RequestLessonPersistence requestLessonPersistence) {
		this.requestLessonPersistence = requestLessonPersistence;
	}

	/**
	 * Returns the request lesson finder.
	 *
	 * @return the request lesson finder
	 */
	public RequestLessonFinder getRequestLessonFinder() {
		return requestLessonFinder;
	}

	/**
	 * Sets the request lesson finder.
	 *
	 * @param requestLessonFinder the request lesson finder
	 */
	public void setRequestLessonFinder(RequestLessonFinder requestLessonFinder) {
		this.requestLessonFinder = requestLessonFinder;
	}

	/**
	 * Returns the slides local service.
	 *
	 * @return the slides local service
	 */
	public com.nyu.service.SlidesLocalService getSlidesLocalService() {
		return slidesLocalService;
	}

	/**
	 * Sets the slides local service.
	 *
	 * @param slidesLocalService the slides local service
	 */
	public void setSlidesLocalService(
		com.nyu.service.SlidesLocalService slidesLocalService) {
		this.slidesLocalService = slidesLocalService;
	}

	/**
	 * Returns the slides persistence.
	 *
	 * @return the slides persistence
	 */
	public SlidesPersistence getSlidesPersistence() {
		return slidesPersistence;
	}

	/**
	 * Sets the slides persistence.
	 *
	 * @param slidesPersistence the slides persistence
	 */
	public void setSlidesPersistence(SlidesPersistence slidesPersistence) {
		this.slidesPersistence = slidesPersistence;
	}

	/**
	 * Returns the user badges local service.
	 *
	 * @return the user badges local service
	 */
	public com.nyu.service.UserBadgesLocalService getUserBadgesLocalService() {
		return userBadgesLocalService;
	}

	/**
	 * Sets the user badges local service.
	 *
	 * @param userBadgesLocalService the user badges local service
	 */
	public void setUserBadgesLocalService(
		com.nyu.service.UserBadgesLocalService userBadgesLocalService) {
		this.userBadgesLocalService = userBadgesLocalService;
	}

	/**
	 * Returns the user badges persistence.
	 *
	 * @return the user badges persistence
	 */
	public UserBadgesPersistence getUserBadgesPersistence() {
		return userBadgesPersistence;
	}

	/**
	 * Sets the user badges persistence.
	 *
	 * @param userBadgesPersistence the user badges persistence
	 */
	public void setUserBadgesPersistence(
		UserBadgesPersistence userBadgesPersistence) {
		this.userBadgesPersistence = userBadgesPersistence;
	}

	/**
	 * Returns the user group request local service.
	 *
	 * @return the user group request local service
	 */
	public com.nyu.service.UserGroupRequestLocalService getUserGroupRequestLocalService() {
		return userGroupRequestLocalService;
	}

	/**
	 * Sets the user group request local service.
	 *
	 * @param userGroupRequestLocalService the user group request local service
	 */
	public void setUserGroupRequestLocalService(
		com.nyu.service.UserGroupRequestLocalService userGroupRequestLocalService) {
		this.userGroupRequestLocalService = userGroupRequestLocalService;
	}

	/**
	 * Returns the user group request persistence.
	 *
	 * @return the user group request persistence
	 */
	public UserGroupRequestPersistence getUserGroupRequestPersistence() {
		return userGroupRequestPersistence;
	}

	/**
	 * Sets the user group request persistence.
	 *
	 * @param userGroupRequestPersistence the user group request persistence
	 */
	public void setUserGroupRequestPersistence(
		UserGroupRequestPersistence userGroupRequestPersistence) {
		this.userGroupRequestPersistence = userGroupRequestPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.nyu.model.LessonObjectives",
			lessonObjectivesLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.nyu.model.LessonObjectives");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return LessonObjectives.class;
	}

	protected String getModelClassName() {
		return LessonObjectives.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = lessonObjectivesPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.nyu.service.AnswerRequestLocalService.class)
	protected com.nyu.service.AnswerRequestLocalService answerRequestLocalService;
	@BeanReference(type = AnswerRequestPersistence.class)
	protected AnswerRequestPersistence answerRequestPersistence;
	@BeanReference(type = com.nyu.service.AuditReportLocalService.class)
	protected com.nyu.service.AuditReportLocalService auditReportLocalService;
	@BeanReference(type = AuditReportPersistence.class)
	protected AuditReportPersistence auditReportPersistence;
	@BeanReference(type = com.nyu.service.BasnoLocalService.class)
	protected com.nyu.service.BasnoLocalService basnoLocalService;
	@BeanReference(type = BasnoPersistence.class)
	protected BasnoPersistence basnoPersistence;
	@BeanReference(type = com.nyu.service.DocumentFileLocalService.class)
	protected com.nyu.service.DocumentFileLocalService documentFileLocalService;
	@BeanReference(type = DocumentFilePersistence.class)
	protected DocumentFilePersistence documentFilePersistence;
	@BeanReference(type = com.nyu.service.DocumentSectionLocalService.class)
	protected com.nyu.service.DocumentSectionLocalService documentSectionLocalService;
	@BeanReference(type = DocumentSectionPersistence.class)
	protected DocumentSectionPersistence documentSectionPersistence;
	@BeanReference(type = com.nyu.service.FavouriteLessonsLocalService.class)
	protected com.nyu.service.FavouriteLessonsLocalService favouriteLessonsLocalService;
	@BeanReference(type = FavouriteLessonsPersistence.class)
	protected FavouriteLessonsPersistence favouriteLessonsPersistence;
	@BeanReference(type = com.nyu.service.KeywordsLocalService.class)
	protected com.nyu.service.KeywordsLocalService keywordsLocalService;
	@BeanReference(type = KeywordsPersistence.class)
	protected KeywordsPersistence keywordsPersistence;
	@BeanReference(type = com.nyu.service.KeywordsCollaborationLocalService.class)
	protected com.nyu.service.KeywordsCollaborationLocalService keywordsCollaborationLocalService;
	@BeanReference(type = KeywordsCollaborationPersistence.class)
	protected KeywordsCollaborationPersistence keywordsCollaborationPersistence;
	@BeanReference(type = com.nyu.service.LessonLocalService.class)
	protected com.nyu.service.LessonLocalService lessonLocalService;
	@BeanReference(type = LessonPersistence.class)
	protected LessonPersistence lessonPersistence;
	@BeanReference(type = LessonFinder.class)
	protected LessonFinder lessonFinder;
	@BeanReference(type = com.nyu.service.Lesson_UsergroupsLocalService.class)
	protected com.nyu.service.Lesson_UsergroupsLocalService lesson_UsergroupsLocalService;
	@BeanReference(type = Lesson_UsergroupsPersistence.class)
	protected Lesson_UsergroupsPersistence lesson_UsergroupsPersistence;
	@BeanReference(type = com.nyu.service.LessonCollaborationLocalService.class)
	protected com.nyu.service.LessonCollaborationLocalService lessonCollaborationLocalService;
	@BeanReference(type = LessonCollaborationPersistence.class)
	protected LessonCollaborationPersistence lessonCollaborationPersistence;
	@BeanReference(type = com.nyu.service.LessonObjectivesLocalService.class)
	protected com.nyu.service.LessonObjectivesLocalService lessonObjectivesLocalService;
	@BeanReference(type = LessonObjectivesPersistence.class)
	protected LessonObjectivesPersistence lessonObjectivesPersistence;
	@BeanReference(type = com.nyu.service.NYUUserGroupLocalService.class)
	protected com.nyu.service.NYUUserGroupLocalService nyuUserGroupLocalService;
	@BeanReference(type = NYUUserGroupPersistence.class)
	protected NYUUserGroupPersistence nyuUserGroupPersistence;
	@BeanReference(type = NYUUserGroupFinder.class)
	protected NYUUserGroupFinder nyuUserGroupFinder;
	@BeanReference(type = com.nyu.service.RequestLessonLocalService.class)
	protected com.nyu.service.RequestLessonLocalService requestLessonLocalService;
	@BeanReference(type = RequestLessonPersistence.class)
	protected RequestLessonPersistence requestLessonPersistence;
	@BeanReference(type = RequestLessonFinder.class)
	protected RequestLessonFinder requestLessonFinder;
	@BeanReference(type = com.nyu.service.SlidesLocalService.class)
	protected com.nyu.service.SlidesLocalService slidesLocalService;
	@BeanReference(type = SlidesPersistence.class)
	protected SlidesPersistence slidesPersistence;
	@BeanReference(type = com.nyu.service.UserBadgesLocalService.class)
	protected com.nyu.service.UserBadgesLocalService userBadgesLocalService;
	@BeanReference(type = UserBadgesPersistence.class)
	protected UserBadgesPersistence userBadgesPersistence;
	@BeanReference(type = com.nyu.service.UserGroupRequestLocalService.class)
	protected com.nyu.service.UserGroupRequestLocalService userGroupRequestLocalService;
	@BeanReference(type = UserGroupRequestPersistence.class)
	protected UserGroupRequestPersistence userGroupRequestPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private LessonObjectivesLocalServiceClpInvoker _clpInvoker = new LessonObjectivesLocalServiceClpInvoker();
}