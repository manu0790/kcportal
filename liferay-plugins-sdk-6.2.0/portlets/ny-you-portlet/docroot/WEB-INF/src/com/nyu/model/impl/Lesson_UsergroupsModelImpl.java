/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.nyu.model.Lesson_Usergroups;
import com.nyu.model.Lesson_UsergroupsModel;

import com.nyu.service.persistence.Lesson_UsergroupsPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Lesson_Usergroups service. Represents a row in the &quot;nyyou_Lesson_Usergroups&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nyu.model.Lesson_UsergroupsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Lesson_UsergroupsImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see Lesson_UsergroupsImpl
 * @see com.nyu.model.Lesson_Usergroups
 * @see com.nyu.model.Lesson_UsergroupsModel
 * @generated
 */
public class Lesson_UsergroupsModelImpl extends BaseModelImpl<Lesson_Usergroups>
	implements Lesson_UsergroupsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lesson_ usergroups model instance should use the {@link com.nyu.model.Lesson_Usergroups} interface instead.
	 */
	public static final String TABLE_NAME = "nyyou_Lesson_Usergroups";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lessonId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table nyyou_Lesson_Usergroups (lessonId LONG not null,groupId LONG not null,primary key (lessonId, groupId))";
	public static final String TABLE_SQL_DROP = "drop table nyyou_Lesson_Usergroups";
	public static final String ORDER_BY_JPQL = " ORDER BY lesson_Usergroups.id.lessonId ASC, lesson_Usergroups.id.groupId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY nyyou_Lesson_Usergroups.lessonId ASC, nyyou_Lesson_Usergroups.groupId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nyu.model.Lesson_Usergroups"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nyu.model.Lesson_Usergroups"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.nyu.model.Lesson_Usergroups"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long LESSONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nyu.model.Lesson_Usergroups"));

	public Lesson_UsergroupsModelImpl() {
	}

	@Override
	public Lesson_UsergroupsPK getPrimaryKey() {
		return new Lesson_UsergroupsPK(_lessonId, _groupId);
	}

	@Override
	public void setPrimaryKey(Lesson_UsergroupsPK primaryKey) {
		setLessonId(primaryKey.lessonId);
		setGroupId(primaryKey.groupId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new Lesson_UsergroupsPK(_lessonId, _groupId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((Lesson_UsergroupsPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Lesson_Usergroups.class;
	}

	@Override
	public String getModelClassName() {
		return Lesson_Usergroups.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lessonId", getLessonId());
		attributes.put("groupId", getGroupId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lessonId = (Long)attributes.get("lessonId");

		if (lessonId != null) {
			setLessonId(lessonId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getLessonId() {
		return _lessonId;
	}

	@Override
	public void setLessonId(long lessonId) {
		_columnBitmask |= LESSONID_COLUMN_BITMASK;

		if (!_setOriginalLessonId) {
			_setOriginalLessonId = true;

			_originalLessonId = _lessonId;
		}

		_lessonId = lessonId;
	}

	public long getOriginalLessonId() {
		return _originalLessonId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Lesson_Usergroups toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Lesson_Usergroups)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Lesson_UsergroupsImpl lesson_UsergroupsImpl = new Lesson_UsergroupsImpl();

		lesson_UsergroupsImpl.setLessonId(getLessonId());
		lesson_UsergroupsImpl.setGroupId(getGroupId());

		lesson_UsergroupsImpl.resetOriginalValues();

		return lesson_UsergroupsImpl;
	}

	@Override
	public int compareTo(Lesson_Usergroups lesson_Usergroups) {
		Lesson_UsergroupsPK primaryKey = lesson_Usergroups.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Lesson_Usergroups)) {
			return false;
		}

		Lesson_Usergroups lesson_Usergroups = (Lesson_Usergroups)obj;

		Lesson_UsergroupsPK primaryKey = lesson_Usergroups.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		Lesson_UsergroupsModelImpl lesson_UsergroupsModelImpl = this;

		lesson_UsergroupsModelImpl._originalLessonId = lesson_UsergroupsModelImpl._lessonId;

		lesson_UsergroupsModelImpl._setOriginalLessonId = false;

		lesson_UsergroupsModelImpl._originalGroupId = lesson_UsergroupsModelImpl._groupId;

		lesson_UsergroupsModelImpl._setOriginalGroupId = false;

		lesson_UsergroupsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Lesson_Usergroups> toCacheModel() {
		Lesson_UsergroupsCacheModel lesson_UsergroupsCacheModel = new Lesson_UsergroupsCacheModel();

		lesson_UsergroupsCacheModel.lessonId = getLessonId();

		lesson_UsergroupsCacheModel.groupId = getGroupId();

		return lesson_UsergroupsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{lessonId=");
		sb.append(getLessonId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.nyu.model.Lesson_Usergroups");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lessonId</column-name><column-value><![CDATA[");
		sb.append(getLessonId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Lesson_Usergroups.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Lesson_Usergroups.class
		};
	private long _lessonId;
	private long _originalLessonId;
	private boolean _setOriginalLessonId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private Lesson_Usergroups _escapedModel;
}