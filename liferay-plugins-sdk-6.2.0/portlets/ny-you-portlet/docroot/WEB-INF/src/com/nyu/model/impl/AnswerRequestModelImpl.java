/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.nyu.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.nyu.model.AnswerRequest;
import com.nyu.model.AnswerRequestModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AnswerRequest service. Represents a row in the &quot;nyyou_AnswerRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.nyu.model.AnswerRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AnswerRequestImpl}.
 * </p>
 *
 * @author Allwins Rajaiah
 * @see AnswerRequestImpl
 * @see com.nyu.model.AnswerRequest
 * @see com.nyu.model.AnswerRequestModel
 * @generated
 */
public class AnswerRequestModelImpl extends BaseModelImpl<AnswerRequest>
	implements AnswerRequestModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a answer request model instance should use the {@link com.nyu.model.AnswerRequest} interface instead.
	 */
	public static final String TABLE_NAME = "nyyou_AnswerRequest";
	public static final Object[][] TABLE_COLUMNS = {
			{ "answerId", Types.BIGINT },
			{ "requestLessonId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "appreciateUserIds", Types.VARCHAR },
			{ "appreciateCount", Types.INTEGER },
			{ "createDate", Types.TIMESTAMP },
			{ "checkedAnswer", Types.BOOLEAN },
			{ "opinionSurvey", Types.VARCHAR },
			{ "myLessons", Types.VARCHAR },
			{ "myFavouriteLessons", Types.VARCHAR },
			{ "collaborationLessons", Types.BIGINT },
			{ "collaborationId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table nyyou_AnswerRequest (answerId LONG not null primary key IDENTITY,requestLessonId LONG,userId LONG,description TEXT null,appreciateUserIds VARCHAR(75) null,appreciateCount INTEGER,createDate DATE null,checkedAnswer BOOLEAN,opinionSurvey TEXT null,myLessons TEXT null,myFavouriteLessons TEXT null,collaborationLessons LONG,collaborationId LONG)";
	public static final String TABLE_SQL_DROP = "drop table nyyou_AnswerRequest";
	public static final String ORDER_BY_JPQL = " ORDER BY answerRequest.answerId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY nyyou_AnswerRequest.answerId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.nyu.model.AnswerRequest"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.nyu.model.AnswerRequest"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.nyu.model.AnswerRequest"),
			true);
	public static long REQUESTLESSONID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static long ANSWERID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.nyu.model.AnswerRequest"));

	public AnswerRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _answerId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAnswerId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _answerId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AnswerRequest.class;
	}

	@Override
	public String getModelClassName() {
		return AnswerRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("answerId", getAnswerId());
		attributes.put("requestLessonId", getRequestLessonId());
		attributes.put("userId", getUserId());
		attributes.put("description", getDescription());
		attributes.put("appreciateUserIds", getAppreciateUserIds());
		attributes.put("appreciateCount", getAppreciateCount());
		attributes.put("createDate", getCreateDate());
		attributes.put("checkedAnswer", getCheckedAnswer());
		attributes.put("opinionSurvey", getOpinionSurvey());
		attributes.put("myLessons", getMyLessons());
		attributes.put("myFavouriteLessons", getMyFavouriteLessons());
		attributes.put("collaborationLessons", getCollaborationLessons());
		attributes.put("collaborationId", getCollaborationId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long answerId = (Long)attributes.get("answerId");

		if (answerId != null) {
			setAnswerId(answerId);
		}

		Long requestLessonId = (Long)attributes.get("requestLessonId");

		if (requestLessonId != null) {
			setRequestLessonId(requestLessonId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String appreciateUserIds = (String)attributes.get("appreciateUserIds");

		if (appreciateUserIds != null) {
			setAppreciateUserIds(appreciateUserIds);
		}

		Integer appreciateCount = (Integer)attributes.get("appreciateCount");

		if (appreciateCount != null) {
			setAppreciateCount(appreciateCount);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Boolean checkedAnswer = (Boolean)attributes.get("checkedAnswer");

		if (checkedAnswer != null) {
			setCheckedAnswer(checkedAnswer);
		}

		String opinionSurvey = (String)attributes.get("opinionSurvey");

		if (opinionSurvey != null) {
			setOpinionSurvey(opinionSurvey);
		}

		String myLessons = (String)attributes.get("myLessons");

		if (myLessons != null) {
			setMyLessons(myLessons);
		}

		String myFavouriteLessons = (String)attributes.get("myFavouriteLessons");

		if (myFavouriteLessons != null) {
			setMyFavouriteLessons(myFavouriteLessons);
		}

		Long collaborationLessons = (Long)attributes.get("collaborationLessons");

		if (collaborationLessons != null) {
			setCollaborationLessons(collaborationLessons);
		}

		Long collaborationId = (Long)attributes.get("collaborationId");

		if (collaborationId != null) {
			setCollaborationId(collaborationId);
		}
	}

	@Override
	public long getAnswerId() {
		return _answerId;
	}

	@Override
	public void setAnswerId(long answerId) {
		_answerId = answerId;
	}

	@Override
	public long getRequestLessonId() {
		return _requestLessonId;
	}

	@Override
	public void setRequestLessonId(long requestLessonId) {
		_columnBitmask |= REQUESTLESSONID_COLUMN_BITMASK;

		if (!_setOriginalRequestLessonId) {
			_setOriginalRequestLessonId = true;

			_originalRequestLessonId = _requestLessonId;
		}

		_requestLessonId = requestLessonId;
	}

	public long getOriginalRequestLessonId() {
		return _originalRequestLessonId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getAppreciateUserIds() {
		if (_appreciateUserIds == null) {
			return StringPool.BLANK;
		}
		else {
			return _appreciateUserIds;
		}
	}

	@Override
	public void setAppreciateUserIds(String appreciateUserIds) {
		_appreciateUserIds = appreciateUserIds;
	}

	@Override
	public int getAppreciateCount() {
		return _appreciateCount;
	}

	@Override
	public void setAppreciateCount(int appreciateCount) {
		_appreciateCount = appreciateCount;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public boolean getCheckedAnswer() {
		return _checkedAnswer;
	}

	@Override
	public boolean isCheckedAnswer() {
		return _checkedAnswer;
	}

	@Override
	public void setCheckedAnswer(boolean checkedAnswer) {
		_checkedAnswer = checkedAnswer;
	}

	@Override
	public String getOpinionSurvey() {
		if (_opinionSurvey == null) {
			return StringPool.BLANK;
		}
		else {
			return _opinionSurvey;
		}
	}

	@Override
	public void setOpinionSurvey(String opinionSurvey) {
		_opinionSurvey = opinionSurvey;
	}

	@Override
	public String getMyLessons() {
		if (_myLessons == null) {
			return StringPool.BLANK;
		}
		else {
			return _myLessons;
		}
	}

	@Override
	public void setMyLessons(String myLessons) {
		_myLessons = myLessons;
	}

	@Override
	public String getMyFavouriteLessons() {
		if (_myFavouriteLessons == null) {
			return StringPool.BLANK;
		}
		else {
			return _myFavouriteLessons;
		}
	}

	@Override
	public void setMyFavouriteLessons(String myFavouriteLessons) {
		_myFavouriteLessons = myFavouriteLessons;
	}

	@Override
	public long getCollaborationLessons() {
		return _collaborationLessons;
	}

	@Override
	public void setCollaborationLessons(long collaborationLessons) {
		_collaborationLessons = collaborationLessons;
	}

	@Override
	public long getCollaborationId() {
		return _collaborationId;
	}

	@Override
	public void setCollaborationId(long collaborationId) {
		_collaborationId = collaborationId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AnswerRequest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AnswerRequest toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AnswerRequest)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AnswerRequestImpl answerRequestImpl = new AnswerRequestImpl();

		answerRequestImpl.setAnswerId(getAnswerId());
		answerRequestImpl.setRequestLessonId(getRequestLessonId());
		answerRequestImpl.setUserId(getUserId());
		answerRequestImpl.setDescription(getDescription());
		answerRequestImpl.setAppreciateUserIds(getAppreciateUserIds());
		answerRequestImpl.setAppreciateCount(getAppreciateCount());
		answerRequestImpl.setCreateDate(getCreateDate());
		answerRequestImpl.setCheckedAnswer(getCheckedAnswer());
		answerRequestImpl.setOpinionSurvey(getOpinionSurvey());
		answerRequestImpl.setMyLessons(getMyLessons());
		answerRequestImpl.setMyFavouriteLessons(getMyFavouriteLessons());
		answerRequestImpl.setCollaborationLessons(getCollaborationLessons());
		answerRequestImpl.setCollaborationId(getCollaborationId());

		answerRequestImpl.resetOriginalValues();

		return answerRequestImpl;
	}

	@Override
	public int compareTo(AnswerRequest answerRequest) {
		long primaryKey = answerRequest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AnswerRequest)) {
			return false;
		}

		AnswerRequest answerRequest = (AnswerRequest)obj;

		long primaryKey = answerRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AnswerRequestModelImpl answerRequestModelImpl = this;

		answerRequestModelImpl._originalRequestLessonId = answerRequestModelImpl._requestLessonId;

		answerRequestModelImpl._setOriginalRequestLessonId = false;

		answerRequestModelImpl._originalUserId = answerRequestModelImpl._userId;

		answerRequestModelImpl._setOriginalUserId = false;

		answerRequestModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AnswerRequest> toCacheModel() {
		AnswerRequestCacheModel answerRequestCacheModel = new AnswerRequestCacheModel();

		answerRequestCacheModel.answerId = getAnswerId();

		answerRequestCacheModel.requestLessonId = getRequestLessonId();

		answerRequestCacheModel.userId = getUserId();

		answerRequestCacheModel.description = getDescription();

		String description = answerRequestCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			answerRequestCacheModel.description = null;
		}

		answerRequestCacheModel.appreciateUserIds = getAppreciateUserIds();

		String appreciateUserIds = answerRequestCacheModel.appreciateUserIds;

		if ((appreciateUserIds != null) && (appreciateUserIds.length() == 0)) {
			answerRequestCacheModel.appreciateUserIds = null;
		}

		answerRequestCacheModel.appreciateCount = getAppreciateCount();

		Date createDate = getCreateDate();

		if (createDate != null) {
			answerRequestCacheModel.createDate = createDate.getTime();
		}
		else {
			answerRequestCacheModel.createDate = Long.MIN_VALUE;
		}

		answerRequestCacheModel.checkedAnswer = getCheckedAnswer();

		answerRequestCacheModel.opinionSurvey = getOpinionSurvey();

		String opinionSurvey = answerRequestCacheModel.opinionSurvey;

		if ((opinionSurvey != null) && (opinionSurvey.length() == 0)) {
			answerRequestCacheModel.opinionSurvey = null;
		}

		answerRequestCacheModel.myLessons = getMyLessons();

		String myLessons = answerRequestCacheModel.myLessons;

		if ((myLessons != null) && (myLessons.length() == 0)) {
			answerRequestCacheModel.myLessons = null;
		}

		answerRequestCacheModel.myFavouriteLessons = getMyFavouriteLessons();

		String myFavouriteLessons = answerRequestCacheModel.myFavouriteLessons;

		if ((myFavouriteLessons != null) && (myFavouriteLessons.length() == 0)) {
			answerRequestCacheModel.myFavouriteLessons = null;
		}

		answerRequestCacheModel.collaborationLessons = getCollaborationLessons();

		answerRequestCacheModel.collaborationId = getCollaborationId();

		return answerRequestCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{answerId=");
		sb.append(getAnswerId());
		sb.append(", requestLessonId=");
		sb.append(getRequestLessonId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", appreciateUserIds=");
		sb.append(getAppreciateUserIds());
		sb.append(", appreciateCount=");
		sb.append(getAppreciateCount());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", checkedAnswer=");
		sb.append(getCheckedAnswer());
		sb.append(", opinionSurvey=");
		sb.append(getOpinionSurvey());
		sb.append(", myLessons=");
		sb.append(getMyLessons());
		sb.append(", myFavouriteLessons=");
		sb.append(getMyFavouriteLessons());
		sb.append(", collaborationLessons=");
		sb.append(getCollaborationLessons());
		sb.append(", collaborationId=");
		sb.append(getCollaborationId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.nyu.model.AnswerRequest");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>answerId</column-name><column-value><![CDATA[");
		sb.append(getAnswerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestLessonId</column-name><column-value><![CDATA[");
		sb.append(getRequestLessonId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appreciateUserIds</column-name><column-value><![CDATA[");
		sb.append(getAppreciateUserIds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appreciateCount</column-name><column-value><![CDATA[");
		sb.append(getAppreciateCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkedAnswer</column-name><column-value><![CDATA[");
		sb.append(getCheckedAnswer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>opinionSurvey</column-name><column-value><![CDATA[");
		sb.append(getOpinionSurvey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myLessons</column-name><column-value><![CDATA[");
		sb.append(getMyLessons());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myFavouriteLessons</column-name><column-value><![CDATA[");
		sb.append(getMyFavouriteLessons());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>collaborationLessons</column-name><column-value><![CDATA[");
		sb.append(getCollaborationLessons());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>collaborationId</column-name><column-value><![CDATA[");
		sb.append(getCollaborationId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AnswerRequest.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AnswerRequest.class
		};
	private long _answerId;
	private long _requestLessonId;
	private long _originalRequestLessonId;
	private boolean _setOriginalRequestLessonId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _description;
	private String _appreciateUserIds;
	private int _appreciateCount;
	private Date _createDate;
	private boolean _checkedAnswer;
	private String _opinionSurvey;
	private String _myLessons;
	private String _myFavouriteLessons;
	private long _collaborationLessons;
	private long _collaborationId;
	private long _columnBitmask;
	private AnswerRequest _escapedModel;
}